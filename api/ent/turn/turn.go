// Code generated by entc, DO NOT EDIT.

package turn

import (
	"time"
)

const (
	// Label holds the string label denoting the turn type in the database.
	Label = "turn"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldLocationID holds the string denoting the location_id field in the database.
	FieldLocationID = "location_id"
	// FieldItemID holds the string denoting the item_id field in the database.
	FieldItemID = "item_id"
	// FieldBuyOrSell holds the string denoting the buy_or_sell field in the database.
	FieldBuyOrSell = "buy_or_sell"
	// FieldAmountToGive holds the string denoting the amount_to_give field in the database.
	FieldAmountToGive = "amount_to_give"
	// FieldUserCombatStats holds the string denoting the user_combat_stats field in the database.
	FieldUserCombatStats = "user_combat_stats"
	// FieldDrugLordCombatStats holds the string denoting the drug_lord_combat_stats field in the database.
	FieldDrugLordCombatStats = "drug_lord_combat_stats"
	// FieldTradeOccurs holds the string denoting the trade_occurs field in the database.
	FieldTradeOccurs = "trade_occurs"
	// FieldUserPreTradeItem holds the string denoting the user_pre_trade_item field in the database.
	FieldUserPreTradeItem = "user_pre_trade_item"
	// FieldUserPostTradePreEventItem holds the string denoting the user_post_trade_pre_event_item field in the database.
	FieldUserPostTradePreEventItem = "user_post_trade_pre_event_item"
	// FieldUserPostTradePostEventItem holds the string denoting the user_post_trade_post_event_item field in the database.
	FieldUserPostTradePostEventItem = "user_post_trade_post_event_item"
	// FieldUserPreTradeMoney holds the string denoting the user_pre_trade_money field in the database.
	FieldUserPreTradeMoney = "user_pre_trade_money"
	// FieldUserPostTradePreEventMoney holds the string denoting the user_post_trade_pre_event_money field in the database.
	FieldUserPostTradePreEventMoney = "user_post_trade_pre_event_money"
	// FieldUserPostTradePostEventMoney holds the string denoting the user_post_trade_post_event_money field in the database.
	FieldUserPostTradePostEventMoney = "user_post_trade_post_event_money"
	// FieldMarketPreTradeItem holds the string denoting the market_pre_trade_item field in the database.
	FieldMarketPreTradeItem = "market_pre_trade_item"
	// FieldMarketPostTradePreEventItem holds the string denoting the market_post_trade_pre_event_item field in the database.
	FieldMarketPostTradePreEventItem = "market_post_trade_pre_event_item"
	// FieldMarketPostTradePostEventItem holds the string denoting the market_post_trade_post_event_item field in the database.
	FieldMarketPostTradePostEventItem = "market_post_trade_post_event_item"
	// FieldMarketPreTradeMoney holds the string denoting the market_pre_trademoney field in the database.
	FieldMarketPreTradeMoney = "market_pre_trade_money"
	// FieldMarketPostTradePreEventMoney holds the string denoting the market_post_trade_pre_eventmoney field in the database.
	FieldMarketPostTradePreEventMoney = "market_post_trade_pre_event_money"
	// FieldMarketPostTradePostEventMoney holds the string denoting the market_post_trade_post_eventmoney field in the database.
	FieldMarketPostTradePostEventMoney = "market_post_trade_post_event_money"
	// FieldDealerDash holds the string denoting the dealer_dash field in the database.
	FieldDealerDash = "dealer_dash"
	// FieldWrangleDashedDealer holds the string denoting the wrangle_dashed_dealer field in the database.
	FieldWrangleDashedDealer = "wrangle_dashed_dealer"
	// FieldMugging holds the string denoting the mugging field in the database.
	FieldMugging = "mugging"
	// FieldRunFromMugging holds the string denoting the run_from_mugging field in the database.
	FieldRunFromMugging = "run_from_mugging"
	// FieldGangWar holds the string denoting the gang_war field in the database.
	FieldGangWar = "gang_war"
	// FieldDefendGangWar holds the string denoting the defend_gang_war field in the database.
	FieldDefendGangWar = "defend_gang_war"
	// FieldCopRaid holds the string denoting the cop_raid field in the database.
	FieldCopRaid = "cop_raid"
	// FieldBribeCops holds the string denoting the bribe_cops field in the database.
	FieldBribeCops = "bribe_cops"
	// FieldFindItem holds the string denoting the find_item field in the database.
	FieldFindItem = "find_item"
	// FieldLocalShipment holds the string denoting the local_shipment field in the database.
	FieldLocalShipment = "local_shipment"
	// FieldWarehouseSeizure holds the string denoting the warehouse_seizure field in the database.
	FieldWarehouseSeizure = "warehouse_seizure"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the turn in the database.
	Table = "turns"
)

// Columns holds all SQL columns for turn fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldLocationID,
	FieldItemID,
	FieldBuyOrSell,
	FieldAmountToGive,
	FieldUserCombatStats,
	FieldDrugLordCombatStats,
	FieldTradeOccurs,
	FieldUserPreTradeItem,
	FieldUserPostTradePreEventItem,
	FieldUserPostTradePostEventItem,
	FieldUserPreTradeMoney,
	FieldUserPostTradePreEventMoney,
	FieldUserPostTradePostEventMoney,
	FieldMarketPreTradeItem,
	FieldMarketPostTradePreEventItem,
	FieldMarketPostTradePostEventItem,
	FieldMarketPreTradeMoney,
	FieldMarketPostTradePreEventMoney,
	FieldMarketPostTradePostEventMoney,
	FieldDealerDash,
	FieldWrangleDashedDealer,
	FieldMugging,
	FieldRunFromMugging,
	FieldGangWar,
	FieldDefendGangWar,
	FieldCopRaid,
	FieldBribeCops,
	FieldFindItem,
	FieldLocalShipment,
	FieldWarehouseSeizure,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	UserIDValidator func(string) error
	// LocationIDValidator is a validator for the "location_id" field. It is called by the builders before save.
	LocationIDValidator func(string) error
	// ItemIDValidator is a validator for the "item_id" field. It is called by the builders before save.
	ItemIDValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
