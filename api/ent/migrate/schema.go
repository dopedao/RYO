// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TurnsColumns holds the columns for the "turns" table.
	TurnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "location_id", Type: field.TypeString},
		{Name: "item_id", Type: field.TypeString},
		{Name: "buy_or_sell", Type: field.TypeBool},
		{Name: "amount_to_give", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_combat_stats", Type: field.TypeJSON},
		{Name: "drug_lord_combat_stats", Type: field.TypeJSON},
		{Name: "trade_occurs", Type: field.TypeBool},
		{Name: "user_pre_trade_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_post_trade_pre_event_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_post_trade_post_event_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_pre_trade_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_post_trade_pre_event_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "user_post_trade_post_event_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_pre_trade_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_post_trade_pre_event_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_post_trade_post_event_item", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_pre_trade_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_post_trade_pre_event_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "market_post_trade_post_event_money", Type: field.TypeInt, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "dealer_dash", Type: field.TypeBool},
		{Name: "wrangle_dashed_dealer", Type: field.TypeBool},
		{Name: "mugging", Type: field.TypeBool},
		{Name: "run_from_mugging", Type: field.TypeBool},
		{Name: "gang_war", Type: field.TypeBool},
		{Name: "defend_gang_war", Type: field.TypeBool},
		{Name: "cop_raid", Type: field.TypeBool},
		{Name: "bribe_cops", Type: field.TypeBool},
		{Name: "find_item", Type: field.TypeBool},
		{Name: "local_shipment", Type: field.TypeBool},
		{Name: "warehouse_seizure", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TurnsTable holds the schema information for the "turns" table.
	TurnsTable = &schema.Table{
		Name:       "turns",
		Columns:    TurnsColumns,
		PrimaryKey: []*schema.Column{TurnsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TurnsTable,
	}
)

func init() {
}
